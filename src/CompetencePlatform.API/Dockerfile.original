# See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.

# Depending on the operating system of the host machines(s) that will build or run the containers, the image specified in the FROM statement may need to be changed.
# For more information, please see https://aka.ms/containercompat

# This stage is used when running from VS in fast mode (Default for Debug configuration)
FROM mcr.microsoft.com/dotnet/aspnet:7.0 AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443


# This stage is used to build the service project
FROM mcr.microsoft.com/dotnet/sdk:7.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src
COPY ["src/CompetencePlatform.API/CompetencePlatform.API.csproj", "src/CompetencePlatform.API/"]
COPY ["src/CompetencePlatform.Application/CompetencePlatform.Application.csproj", "src/CompetencePlatform.Application/"]
COPY ["src/CompetencePlatform.DataAccess/CompetencePlatform.DataAccess.csproj", "src/CompetencePlatform.DataAccess/"]
COPY ["src/CompetencePlatform.Core/CompetencePlatform.Core.csproj", "src/CompetencePlatform.Core/"]
COPY ["src/CompetencePlatform.Shared/CompetencePlatform.Shared.csproj", "src/CompetencePlatform.Shared/"]
RUN dotnet restore "./src/CompetencePlatform.API/CompetencePlatform.API.csproj"
COPY . .
WORKDIR "/src/src/CompetencePlatform.API"
RUN dotnet build "./CompetencePlatform.API.csproj" -c %BUILD_CONFIGURATION% -o /app/build

# This stage is used to publish the service project to be copied to the final stage
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./CompetencePlatform.API.csproj" -c %BUILD_CONFIGURATION% -o /app/publish /p:UseAppHost=false

# This stage is used in production or when running from VS in regular mode (Default when not using the Debug configuration)
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "CompetencePlatform.API.dll"]